{"version":3,"file":"index.js","sources":["../src/index.tsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\n\ninterface Props {\n  placeholder?: string;\n  validators?: [\n    (value: string, index?: number, list?: { [key: number]: string }) => boolean\n  ];\n}\n\nexport const ListExtender = ({ placeholder, validators }: Props) => {\n  const [list, setList] = useState<{ [key: number]: string }>({});\n  const [isInput, setIsInput] = useState<{ [key: number]: boolean }>({});\n\n  useEffect(() => {\n    let addInput = true;\n    Object.keys(list).forEach((key) => {\n      if (!list[key].trim() || !validate(list[key], parseInt(key))) {\n        addInput = false;\n      }\n    });\n    if (addInput) {\n      setList((prevList) => {\n        const newList = { ...prevList };\n        newList[Object.keys(newList).length] = \"\";\n        return newList;\n      });\n      setIsInput((prevInput) => {\n        const newIsInput = { ...prevInput };\n        newIsInput[Object.keys(newIsInput).length] = true;\n        return newIsInput;\n      });\n    }\n  }, [list]);\n\n  const validate = (value: string, index?: number) => {\n    if (!validators) {\n      return true;\n    }\n    for (let validator of validators) {\n      if (!validator(value, index, list)) {\n        return false;\n      }\n    }\n    return true;\n  };\n\n  const setListText = (index: number, value: string) => {\n    setList((prevList) => {\n      const newList = { ...prevList };\n      newList[index] = value;\n      console.log(newList);\n      return newList;\n    });\n  };\n\n  const toggleInput = (index: number) => {\n    if (isInput[index] && !list[index].trim()) {\n      return;\n    }\n    setIsInput((prevInput) => {\n      const newList = { ...prevInput };\n      newList[index] = !newList[index];\n      return newList;\n    });\n  };\n\n  return (\n    <ul>\n      {Object.keys(list).map((key, index) => {\n        if (isInput[index]) {\n          return (\n            <li>\n              <input\n                key={index}\n                value={list[key]}\n                placeholder={placeholder}\n                onChange={(e) => setListText(index, e.target.value)}\n                onBlur={() => toggleInput(index)}\n              />\n            </li>\n          );\n        } else {\n          return (\n            <li key={index} onDoubleClick={() => toggleInput(index)}>\n              {list[key]}\n            </li>\n          );\n        }\n      })}\n    </ul>\n  );\n};\n\nexport default ListExtender;\n"],"names":["ListExtender","placeholder","validators","useState","list","setList","isInput","setIsInput","useEffect","addInput","Object","keys","forEach","key","trim","validate","parseInt","prevList","newList","length","prevInput","newIsInput","value","index","validator","setListText","console","log","toggleInput","React","map","onChange","e","target","onBlur","onDoubleClick"],"mappings":"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"}